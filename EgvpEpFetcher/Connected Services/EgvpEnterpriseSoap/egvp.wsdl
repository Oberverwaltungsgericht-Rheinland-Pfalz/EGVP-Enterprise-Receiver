<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:tns="urn:de:bos-bremen:egvp:ws" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" name="egvp" targetNamespace="urn:de:bos-bremen:egvp:ws" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsp:Policy wsu:Id="ManagedService_Policy">
  </wsp:Policy>
  <wsdl:types>
    <xs:schema>
      <xs:import schemaLocation="http://10.10.79.73:8080/EGVP-WS/EGVP-WebService?xsd=6" namespace="urn:de:bos-bremen:egvp:ws" />
      <xs:import schemaLocation="http://10.10.79.73:8080/EGVP-WS/EGVP-WebService?xsd=7" namespace="urn:de:bos-bremen:egvp:ws" />
      <xs:import schemaLocation="http://10.10.79.73:8080/EGVP-WS/EGVP-WebService?xsd=5" namespace="urn:de:bos-bremen:egvp:ws" />
      <xs:import schemaLocation="http://10.10.79.73:8080/EGVP-WS/EGVP-WebService?xsd=1" namespace="urn:de:bos-bremen:egvp:ws" />
      <xs:import schemaLocation="http://10.10.79.73:8080/EGVP-WS/EGVP-WebService?xsd=8" namespace="urn:de:bos-bremen:egvp:ws" />
      <xs:import schemaLocation="http://10.10.79.73:8080/EGVP-WS/EGVP-WebService?xsd=4" namespace="urn:de:bos-bremen:egvp:ws" />
      <xs:import schemaLocation="http://10.10.79.73:8080/EGVP-WS/EGVP-WebService?xsd=2" namespace="urn:de:bos-bremen:egvp:ws" />
      <xs:import schemaLocation="http://10.10.79.73:8080/EGVP-WS/EGVP-WebService?xsd=3" namespace="urn:de:bos-bremen:egvp:ws" />
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="searchReceiverRequest">
    <wsdl:part name="searchReceiverRequest" element="tns:searchReceiverRequest" />
  </wsdl:message>
  <wsdl:message name="searchReceiverResponse">
    <wsdl:part name="searchReceiverResponse" element="tns:searchReceiverResponse" />
  </wsdl:message>
  <wsdl:message name="sendSynchroniousMessageRequest">
    <wsdl:part name="sendSynchroniousMessageRequest" element="tns:sendSynchroniousMessageRequest" />
  </wsdl:message>
  <wsdl:message name="sendSynchroniousMessageResponse">
    <wsdl:part name="sendSynchroniousMessageResponse" element="tns:sendSynchroniousMessageResponse" />
  </wsdl:message>
  <wsdl:message name="sendAsynchroniousMessageRequest">
    <wsdl:part name="sendAsynchroniousMessageRequest" element="tns:sendAsynchroniousMessageRequest" />
  </wsdl:message>
  <wsdl:message name="sendAsynchroniousMessageResponse">
    <wsdl:part name="sendAsynchroniousMessageResponse" element="tns:sendAsynchroniousMessageResponse" />
  </wsdl:message>
  <wsdl:message name="asynchroniousMessageSentRequest">
    <wsdl:part name="asynchroniousMessageSentRequest" element="tns:asynchroniousMessageSentRequest" />
  </wsdl:message>
  <wsdl:message name="asynchroniousMessageSentResponse">
    <wsdl:part name="asynchroniousMessageSentResponse" element="tns:asynchroniousMessageSentResponse" />
  </wsdl:message>
  <wsdl:message name="receiveMessageRequest">
    <wsdl:part name="receiveMessageRequest" element="tns:receiveMessageRequest" />
  </wsdl:message>
  <wsdl:message name="receiveMessageResponse">
    <wsdl:part name="receiveMessageResponse" element="tns:receiveMessageResponse" />
  </wsdl:message>
  <wsdl:message name="commitReceivedMessageRequest">
    <wsdl:part name="commitReceivedMessageRequest" element="tns:commitReceivedMessageRequest" />
  </wsdl:message>
  <wsdl:message name="commitReceivedMessageResponse">
    <wsdl:part name="commitReceivedMessageResponse" element="tns:commitReceivedMessageResponse" />
  </wsdl:message>
  <wsdl:message name="commitSentMessageRequest">
    <wsdl:part name="commitSentMessageRequest" element="tns:commitSentMessageRequest" />
  </wsdl:message>
  <wsdl:message name="commitSentMessageResponse">
    <wsdl:part name="commitSentMessageResponse" element="tns:commitSentMessageResponse" />
  </wsdl:message>
  <wsdl:message name="cancelSentMessageRequest">
    <wsdl:part name="cancelSentMessageRequest" element="tns:cancelSentMessageRequest" />
  </wsdl:message>
  <wsdl:message name="cancelSentMessageResponse">
    <wsdl:part name="cancelSentMessageResponse" element="tns:cancelSentMessageResponse" />
  </wsdl:message>
  <wsdl:message name="verifyMessageRequest">
    <wsdl:part name="verifyMessageRequest" element="tns:verifyMessageRequest" />
  </wsdl:message>
  <wsdl:message name="verifyMessageResponse">
    <wsdl:part name="verifyMessageResponse" element="tns:verifyMessageResponse" />
  </wsdl:message>
  <wsdl:message name="registerNotificationCallbackRequest">
    <wsdl:part name="registerNotificationCallbackRequest" element="tns:registerNotificationCallbackRequest" />
  </wsdl:message>
  <wsdl:message name="registerNotificationCallbackResponse">
    <wsdl:part name="registerNotificationCallbackResponse" element="tns:registerNotificationCallbackResponse" />
  </wsdl:message>
  <wsdl:message name="deregisterNotificationCallbackRequest">
    <wsdl:part name="deregisterNotificationCallbackRequest" element="tns:deregisterNotificationCallbackRequest" />
  </wsdl:message>
  <wsdl:message name="deregisterNotificationCallbackResponse">
    <wsdl:part name="deregisterNotificationCallbackResponse" element="tns:deregisterNotificationCallbackResponse" />
  </wsdl:message>
  <wsdl:message name="getStateRequest">
    <wsdl:part name="getStateRequest" element="tns:getStateRequest" />
  </wsdl:message>
  <wsdl:message name="getStateResponse">
    <wsdl:part name="getStateResponse" element="tns:getStateResponse" />
  </wsdl:message>
  <wsdl:message name="getUncommittedMessageIDsRequest">
    <wsdl:part name="getUncommittedMessageIDsRequest" element="tns:getUncommittedMessageIDsRequest" />
  </wsdl:message>
  <wsdl:message name="getUncommittedMessageIDsResponse">
    <wsdl:part name="getUncommittedMessageIDsResponse" element="tns:getUncommittedMessageIDsResponse" />
  </wsdl:message>
  <wsdl:portType name="EgvpPortType">
    <wsdl:operation name="searchReceiver">
      <wsdl:documentation>Searches receivers for the given search
				criterias. At least one of the possible search criterias has to be
				specified und must not be empty.
			</wsdl:documentation>
      <wsdl:input message="tns:searchReceiverRequest" />
      <wsdl:output message="tns:searchReceiverResponse" />
    </wsdl:operation>
    <wsdl:operation name="sendSynchroniousMessage">
      <wsdl:documentation>An EGVP message will be created, signed if
				required and send to the specified receivers. All required
				parameters have to be specified.
			</wsdl:documentation>
      <wsdl:input message="tns:sendSynchroniousMessageRequest" />
      <wsdl:output message="tns:sendSynchroniousMessageResponse" />
    </wsdl:operation>
    <wsdl:operation name="sendAsynchroniousMessage">
      <wsdl:documentation>An EGVP message will be created, signed if
				required and send to the specified receivers. All required
				parameters have to be specified.
			</wsdl:documentation>
      <wsdl:input message="tns:sendAsynchroniousMessageRequest" />
      <wsdl:output message="tns:sendAsynchroniousMessageResponse" />
    </wsdl:operation>
    <wsdl:operation name="asynchroniousMessageSent">
      <wsdl:documentation>An EGVP message will be created, signed if
				required and send to the specified receivers. All required
				parameters have to be specified.
			</wsdl:documentation>
      <wsdl:input message="tns:asynchroniousMessageSentRequest" />
      <wsdl:output message="tns:asynchroniousMessageSentResponse" />
    </wsdl:operation>
    <wsdl:operation name="receiveMessage">
      <wsdl:documentation>Receives a message.</wsdl:documentation>
      <wsdl:input message="tns:receiveMessageRequest" />
      <wsdl:output message="tns:receiveMessageResponse" />
    </wsdl:operation>
    <wsdl:operation name="commitReceivedMessage">
      <wsdl:documentation>Commits a previously received message.
			</wsdl:documentation>
      <wsdl:input message="tns:commitReceivedMessageRequest" />
      <wsdl:output message="tns:commitReceivedMessageResponse" />
    </wsdl:operation>
    <wsdl:operation name="commitSentMessage">
      <wsdl:documentation>Commits a previously received message.
			</wsdl:documentation>
      <wsdl:input message="tns:commitSentMessageRequest" />
      <wsdl:output message="tns:commitSentMessageResponse" />
    </wsdl:operation>
    <wsdl:operation name="cancelSentMessage">
      <wsdl:documentation>An EGVP message will be created, signed if
				required and send to the specified receivers. All required
				parameters have to be specified.
			</wsdl:documentation>
      <wsdl:input message="tns:cancelSentMessageRequest" />
      <wsdl:output message="tns:cancelSentMessageResponse" />
    </wsdl:operation>
    <wsdl:operation name="verifyMessage">
      <wsdl:documentation>Verifies a given message by its
				oscicontentdata.osci.
			</wsdl:documentation>
      <wsdl:input message="tns:verifyMessageRequest" />
      <wsdl:output message="tns:verifyMessageResponse" />
    </wsdl:operation>
    <wsdl:operation name="registerNotificationCallback">
      <wsdl:documentation>register notifcation callback.
			</wsdl:documentation>
      <wsdl:input message="tns:registerNotificationCallbackRequest" />
      <wsdl:output message="tns:registerNotificationCallbackResponse" />
    </wsdl:operation>
    <wsdl:operation name="deregisterNotificationCallback">
      <wsdl:documentation>deregister notifcation callback.
			</wsdl:documentation>
      <wsdl:input message="tns:deregisterNotificationCallbackRequest" />
      <wsdl:output message="tns:deregisterNotificationCallbackResponse" />
    </wsdl:operation>
    <wsdl:operation name="getState">
      <wsdl:documentation />
      <wsdl:input message="tns:getStateRequest" />
      <wsdl:output message="tns:getStateResponse" />
    </wsdl:operation>
    <wsdl:operation name="getUncommittedMessageIDs">
      <wsdl:documentation />
      <wsdl:input message="tns:getUncommittedMessageIDsRequest" />
      <wsdl:output message="tns:getUncommittedMessageIDsResponse" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="EgvpPortSOAPBinding" type="tns:EgvpPortType">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="searchReceiver">
      <soap:operation soapAction="urn:de:bos-bremen:egvp:ws:searchReceiver" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sendSynchroniousMessage">
      <soap:operation soapAction="urn:de:bos-bremen:egvp:ws:sendSynchroniousMessage" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="sendAsynchroniousMessage">
      <soap:operation soapAction="urn:de:bos-bremen:egvp:ws:sendAsynchroniousMessage" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="asynchroniousMessageSent">
      <soap:operation soapAction="urn:de:bos-bremen:egvp:ws:asynchroniousMessageSent" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="cancelSentMessage">
      <soap:operation soapAction="urn:de:bos-bremen:egvp:ws:cancelSentMessage" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="receiveMessage">
      <soap:operation soapAction="urn:de:bos-bremen:egvp:ws:receiveMessage" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="commitReceivedMessage">
      <soap:operation soapAction="urn:de:bos-bremen:egvp:ws:commitReceivedMessage" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="commitSentMessage">
      <soap:operation soapAction="urn:de:bos-bremen:egvp:ws:commitSentMessage" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="verifyMessage">
      <soap:operation soapAction="urn:de:bos-bremen:egvp:ws:verifyMessage" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="registerNotificationCallback">
      <soap:operation soapAction="urn:de:bos-bremen:egvp:ws:registerNotificationCallback" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deregisterNotificationCallback">
      <soap:operation soapAction="urn:de:bos-bremen:egvp:ws:deregisterNotificationCallback" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getState">
      <soap:operation soapAction="urn:de:bos-bremen:egvp:ws:getState" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getUncommittedMessageIDs">
      <soap:operation soapAction="urn:de:bos-bremen:egvp:ws:getUncommittedMessageIDs" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="EgvpService">
    <wsdl:port name="EgvpPort" binding="tns:EgvpPortSOAPBinding">
      <soap:address location="http://10.10.79.73:8080/EGVP-WS/EGVP-WebService" />
      <wsp:PolicyReference URI="#ManagedService_Policy" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>